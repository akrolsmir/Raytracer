{"name":"Raytracer","tagline":"Austin and Alec's CS184 Raytracer","body":"## About\r\nA very magnificent Raytracer, by Alec Mouri (cs184-cq) and Austin Chen (cs184-cn)\r\n\r\nThis application is intended to be built with Microsoft Visual Studio 2013 and uses the Eigen and FreeImage libraries.\r\n\r\n## Features\r\n\r\nThis raytracer has the following features:\r\n\r\n* Parsing of modified .obj files (described below)\r\n* Primitive definition of spheres and triangles\r\n* Shading with the Phong illumination model\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-01.png)\r\n\r\n* Linear transformations (ie. translations, rotations, scaling)\r\n* Shadows\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-05.png)\r\n\r\n* Specification of point and directional lights\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-10.png)\r\n\r\n* Arbitrary camera positioning + transformations of the viewing plane\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-03.png)\r\n\r\n* Acceleration with AABB-trees\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-07.png)\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-08.png)\r\n\r\n* Depth of field\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-12.png)\r\n\r\n* Environment mapping\r\n* Motion blur\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-51.png)\r\n\r\n* Anti-aliasing\r\n* Reflections\r\n* Refractions\r\n\r\n![](http://inst.cs.berkeley.edu/~cs184-cn/Raytracer/output/image-50.png)\r\n\r\n* Writing to common image formats via FreeImage\r\n\r\n## Input\r\n\r\nThe input file is a text file of the form <imagename>-<number>.test. It supports the following commands.\r\n\r\n* `# comment` -- The hash tag denotes a comment. The line following '#' is ignored.\r\n* `size height width` -- This must be the first line of input that is neither a comment nor a blank line. Specifies the image size.\r\n* `maxdepth max_depth` -- The maximum recursion depth of the raytracer. Default is 0.\r\n* `aliasing aa` -- The number of rays to be sent per pixel is aa^2. Default is 1.\r\n* `output output_name` -- The name of the output file. The file type will be parsed from the extension.\r\n* `camera x y z` -- x,y,z is the camera position. The camera always points towards the viewing plane centered at (0, 0, -1), unless the camera is transformed.\r\n* `g name` -- specifies a group. All code following it and preceding a \"g\" denotes an object. Modifiers such as diffuse coefficients will be specified to all members of the group currently defined.\r\n* `sphere x y z r` -- x y z is the center, r is the radius of a sphere\r\n* `maxverts max_verts` -- The maximum number of vertices in the scene.\r\n* `maxvertnorms max_verts` -- The maximum number of vertices with normals in the scene.\r\n* `v v1 v2 v3` -- A vertex at v1,v2,v3\r\n* `vn v1 v2 v3` -- A vertex normal at v1,v2,v3\r\n* `f v1//[vn1] v2//[vn2] v3//[vn3]` -- A face with vertices v1,v2,v3 and normals vn1,vn2,vn3\r\n* `translate x y z` -- specifies a translation along x,y,z\r\n* `rotate x y z r` -- specifies a rotation along x,y,z by r degrees.\r\n* `scale x y z` -- scales the object by x,y,z\r\n* `pushTransform` -- pushes the transformation of the stack to be applied to future objects.\r\n* `popTransform` -- pops the topmost transformation from the stack\r\n* `directional x y z r g b` -- Specifies a direcgtional light with direction x,y,z and color r,g,b\r\n* `point x y z r g b` -- Specifies a point light at x,y,z and color r,g,b\r\n* `ambient r g b` -- Specifies the ambiance of the scene to be r,g,b\r\n* `diffuse r g b` -- Specifies the diffuse coefficient of the preceding object to r g b\r\n* `specular r g b` -- Specifies the specular component of the preceding object to be r g b\r\n* `shininess sp` -- Specifies the roughness of the preceding object to be sp\r\n* `emission r g b` -- Specifies the ambiant coefficient of the preceding object to be r g b\r\n* `reflectance r g b` -- Specifies the reflectance coefficient of the preceding object to be r g b\r\n* `envmap filename x1 y1 z1 x2 y2 z2 x3 y3 z3` -- Defines an environment map with source filename at the location specified by the parallelogram defined by (x1,y1,z1),(x2,y2,z2),(x3,y3,z3)\r\n* `dof depth_dist` -- Specifies the location of the lens and turns depth of field on.\r\n* `frames num` -- Specifies the number of frames to draw with motion blur.\r\n* `velocity dx dy dz` -- Specifies a velocity to the most recently defined object.\r\n* `acceleration dx dy dz` -- Specifies an acceleration to the most recently defined object.\r\n\r\nThe program outputs an image and a notes file, denoting the name of the input file and how long it took to render the image.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}